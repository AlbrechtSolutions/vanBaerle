@inherits RazorTemplateBase<RazorTemplateModel<Template>>
@using Dynamicweb.Rendering;
@* version 1.3 *@
@Include("/Files/Templates/Designs/LayoutFunctions.cshtml")

@{
  string renderType = GetBoolean("Item.BlueBox")? "blue-box" : "";
  string noBackground = GetBoolean("Item.No_Background")? "no-bg" : "";
  string heightBox = (!string.IsNullOrEmpty(GetString("Item.Height"))) ? GetString("Item.Height") : "";

  string videoID = GetString("Item.ID_Video");
  string videoSrc = "https://www.youtube.com/embed/" + videoID;

  string displayType =  !string.IsNullOrEmpty(GetString("ParagraphModule")) ? "slides" : "section";

  string uImage = GetString("Item.Item_User.Image.Value"),
         uName = GetString("Item.Item_User.Name.Value"),
         uFunction = GetString("Item.Item_User.Function.Value"),
         uAddress = GetString("Item.Item_User.Address.Value"),
         uEmail = GetString("Item.Item_User.Email.Value"),
         uPhone = GetString("Item.Item_User.Phone.Value");
  
}


@NewRow()

<article class='@GetColumnClass() @displayType @noBackground @renderType @heightBox @GetString("Item.Custom_CSS")'>  
  @RenderParagraphAnchor()
 
  <div class="wrapper SP_user">
    <div class="col-left" style="background:url(@uImage) no-repeat center center; background-size: cover;">
    </div>
    
    <div class="col-right box">
      <div class="item">
        <div class="list-text">
          <h2>@GetString("Item.Title")</h2>
          @GetString("Item.Text")


          <div class="address-box">
            @* <p class="note">@Translate("Contact Address", "Contact Address"):</p> *@
            <div class="item-name"><h3>@uName</h3> @uFunction</div>
            @* <div class="item-function">@uFunction</div> *@
            <div class="item-address"><div class="icon">@uAddress</div></div>
            <div class="item-phone"><div class="icon">@uPhone</div></div>
            <div class="item-email"><div class="icon">@uEmail</div></div>
          </div>
        </div>
      </div>
    </div>
  </div>

  @EndParagraphWrapper() 
</article>


@helper RenderParagraphAnchor()
{
  if(Convert.ToBoolean(Dynamicweb.Configuration.SystemConfiguration.Instance.GetValue("/Globalsettings/Settings/Performance/DeactivateParagraphAnchor")))
  {
    <a id='@GetString("ParagraphID")' class="pidlink"></a>
  }
}
@helper RenderHeading()
{
  if(GetBoolean("Item.ShowTitle") && GetString("Item.TitleOrder") == "title-first")
  {
	  @RenderHeadingHtml()
  }
}
@helper RenderHeadingHtml()
{
  if (!string.IsNullOrEmpty(GetString("Item.Title")))
  {
    string headingType = string.IsNullOrEmpty(GetString("Item.HeadingType")) ? "h1" : GetString("Item.HeadingType");
    <header class="paragraphHeader">
  	  @string.Format("<{0}>{1}</{0}>", headingType, GetString("Item.Title"))
  	</header>
  }
}
@helper RenderText()
{
  if(GetString("Item.Order") == "image-left" || GetString("Item.Order") == "image-right")
  {
	@CheckForParagraphWrapper()
    @RenderImageWrapper() 
  }
  if (GetBoolean("Item.ShowTitle") && GetString("Item.TitleOrder") == "title-with-text")
  {
	@CheckForParagraphWrapper()
    @RenderHeadingHtml()
  }
  if (!string.IsNullOrWhiteSpace(GetString("Item.Text")))
  {
	@CheckForParagraphWrapper()
    <div class="paragraphText">
      @GetString("Item.Text")
    </div>
  }
}
@helper RenderModule()
{
  if(!string.IsNullOrEmpty(GetString("ParagraphModule"))){
    @CheckForParagraphWrapper()
    @GetString("ParagraphModule")
  }
}
@helper RenderImage()
{
  if (!string.IsNullOrEmpty(GetString("Item.Image")))
    {
      string itemOrder = (GetString("Item.Order") == "") ? "image-top" : GetString("Item.Order");
      if(itemOrder == "image-left-column" || itemOrder == "image-right-column" || itemOrder == "image-top")
      {
        
          @RenderImageWrapper()

      }
  }
} 
@* @helper RenderImageTag()
{
  if (!string.IsNullOrEmpty(GetString("Item.Image")))
  {
    if (string.IsNullOrEmpty(GetString("Item.Link")))
    {
      @RenderImageWrapper()
    }
    else
    {
      string target = GetBoolean("Item.OpenInANewWindow") ? "target='_blank'" : "";
      <a href="@GetString("Item.Link")" @target style="order: 2;">
        @RenderImageWrapper()
      </a>
    } 
  }
} *@
@helper RenderImageWrapper()
{
  string image = System.Web.HttpContext.Current.Server.UrlEncode(GetString("Item.Image"));
  string imageAlt = (!string.IsNullOrEmpty(GetString("Item.ImageTitle"))) ? GetString("Item.ImageTitle") : GetString("Item.Title");
  string figureWidth = "col-sm-" + GetString("Item.ImageWidth");
  string optimizedWidth = "1280";
  string figureClass = "";//GetString("Item.ImageStyle") ;
  string imageFocus = (!string.IsNullOrEmpty(GetString("Item.ImageFocus"))) ? GetString("Item.ImageFocus") : "";
  string videoID = GetString("Item.ID_Video");

  switch (GetString("Item.Order")){
    case "image-left":
	case "image-left-column":
      figureWidth += " pull-left noPaddingLeft";
      break;
    case "image-right":
    case "image-right-column":
      figureWidth += " pull-right noPaddingRight";
      break;
    case "image-top":
	default:
      figureWidth += " image-top noPadding";
      if(GetInteger("Item.ImageWidth") < 12){
        figureWidth += " col-xs-offset-" + ((12 - GetInteger("Item.ImageWidth")) / 2);
      }
      break;
  }
  figureClass = (figureClass == "none") ? figureWidth : figureClass + " " + figureWidth;

  if (Dynamicweb.Frontend.PageView.Current().Device.ToString() == Dynamicweb.Frontend.Devices.DeviceType.Mobile.ToString())
  {
    switch (GetString("Item.WidthMobile")){
      case "12":
        optimizedWidth = "480";
        break;
      case "6":
        optimizedWidth = "240";
        break;
    }
  }
  else {
    switch (GetString("Item.Width")){
      case "3":
	  case "4":
	  case "6":
        optimizedWidth = "722";
        break;
      case "8":
	  case "9":
        optimizedWidth = "960";
        break;
      default:
        optimizedWidth = "1280";
        break;
    }
  }

  <figure class="@figureClass" style="background-image: url(/Admin/Public/GetImage.ashx?width=@optimizedWidth&image=@image); background-position: @imageFocus;"> &nbsp;
    @* <img class="img-responsive" src="/Admin/Public/GetImage.ashx?width=@optimizedWidth&image=@image" title="@imageAlt" alt="@imageAlt" /> *@
    @if(GetBoolean("Item.ShowVideo")) {
      <div class="transparent-bg">
        <button type="button" class="btn video-btn" data-toggle="modal" data-target="#videoPopup_@videoID"><i class="fa fa-play" aria-hidden="true"></i> </button>
      </div>
    }
  </figure>
}


<div id="videoPopup_@videoID" class="modal fade" role="dialog">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <iframe class="youtube-content" width="854" height="480" src="@videoSrc?version=3&amp;enablejsapi=1" frameborder="0" allowfullscreen=""></iframe>
      </div>
    </div>
  </div>
</div>

@Include("../includes/PageTemplates/ItemDetailHelpersRenderButton.cshtml")