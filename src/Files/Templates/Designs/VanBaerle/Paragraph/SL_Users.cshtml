@inherits RazorTemplateBase<RazorTemplateModel<Template>>
@using Dynamicweb.Rendering;
@* version 1.3 *@
@Include("/Files/Templates/Designs/LayoutFunctions.cshtml")

@{
  string userType = GetString("Item.UserType");
  string noBackground = GetBoolean("Item.No_Background")? "no-bg" : "";

  List<LoopItem> standardList = GetLoop("Item.List");
  string heightBox = (!string.IsNullOrEmpty(GetString("Item.Height"))) ? GetString("Item.Height") : "";

  var items = standardList.Select(i => new { 
      uName = i.GetString("Item.List.Name"),
      uImage = i.GetString("Item.List.Image"),
      uFunction = i.GetString("Item.List.Function"),
  	  uAddress = i.GetString("Item.List.Address"),
  	  uPhone = i.GetString("Item.List.Phone"),
  	  uEmail = i.GetString("Item.List.Email")
  });

  string displayType = userType == "user-slides" ? "slides" : "section";
  string slideNrColumn = GetString("Item.Slide_NrColumn");
}

@NewRow()

<article class='@GetColumnClass() @displayType @noBackground @heightBox @GetString("Item.Custom_CSS")'>

    @if(userType == "user-wide") {    
      <div>
        @RenderParagraphAnchor()
        @RenderHeading()
        @RenderText()
        @RenderButton()
        @EndParagraphWrapper()
      </div>
      <div class="col-md-12 users">
          @foreach(var list in items) {
            <div class="row item">
                <div class="item-image" style="background:url(@list.uImage) no-repeat center center; background-size: cover;">&nbsp;</div>
                <div class="item-name"><h3>@list.uName</h3> @list.uFunction</div>
                <div class="item-phone"><div class="icon">@list.uPhone</div></div>
                <div class="item-email"><div class="icon">@list.uEmail</div></div>
            </div>
          }
      </div>
    }

    @if(userType == "user-5columns") {    
      <div>
        @RenderParagraphAnchor()
        @RenderHeading()
        @RenderText()
        @RenderButton()
        @EndParagraphWrapper()
      </div>
      <div class="col-md-12 wide users">
          @foreach(var list in items) {
            <div class="user">
                <div class="item-image" style="background:url(@list.uImage) no-repeat center center; background-size: cover;">&nbsp;</div>
                <div class="item-name"><h3>@list.uName</h3> @list.uFunction</div>
                <div class="item-address"><div class="icon">@list.uAddress</div></div>
                <div class="item-phone"><div class="icon">@list.uPhone</div></div>
                <div class="item-email"><div class="icon">@list.uEmail</div></div>
            </div>
          }
      </div>
    }

    @if(userType == "user-half") {    
      
        @RenderParagraphAnchor()
        @RenderHeading()
        @RenderText()
        @RenderButton()
        @EndParagraphWrapper()
      
      <div class="users">
          @foreach(var list in items) {
            <div class="col-md-4 user">
                <div class="item-image" style="background:url(@list.uImage) no-repeat center center; background-size: cover;">&nbsp;</div>
                <div class="item-name">
                  <h3>@list.uName</h3>
                  @list.uFunction
                </div>
            </div>
          }
      </div>
    }

    @if(userType == "user-single-top") {
      <div class="user-head">
        @RenderParagraphAnchor()
        @RenderHeading()
        @RenderText()
        @EndParagraphWrapper()
      </div>

      <div class="users top-position">
          @foreach(var list in items) {
            <div class="user">
                <div class="item-image" style="background:url(@list.uImage) no-repeat center center; background-size: cover;">&nbsp;</div>
                <div class="item-name"><h3>@list.uName</h3><br />@list.uFunction</div>
                <div class="item-phone"><div class="icon">@list.uPhone</div></div>
                <div class="item-email"><div class="icon">@list.uEmail</div></div>
            </div>
          }
      </div>
    }

    @if(userType == "user-single-bottom") { 
      <div class="user-head">
        @RenderParagraphAnchor()
        @RenderHeading()
        @RenderText()
        @EndParagraphWrapper()
      </div>

      <div class="users bootom-position">
          @foreach(var list in items) {
            <div class="user">
                <div class="item-image" style="background:url(@list.uImage) no-repeat center center; background-size: cover;">&nbsp;</div>
                <div class="item-name"><h3>@list.uName</h3><br />@list.uFunction</div>
                <div class="item-phone"><div class="icon">@list.uPhone</div></div>
                <div class="item-email"><div class="icon">@list.uEmail</div></div>
            </div>
          }
      </div>
    }


    @if(userType == "user-slides") {
      <div class="section__division">
        @RenderParagraphAnchor()
        @RenderHeading()
        @RenderText()
        @RenderButton()
        @EndParagraphWrapper()
      </div>
      <div class="users">    
        @if(standardList.Any()) {
          <div class="section__slider general_slide" data-nr="@slideNrColumn">
              @foreach(var list in items) {
                  <div class="user card-image card-image--horizontal">
                    
                    <div class="card__img" style='background-image:url(@list.uImage); background-size: cover;'></div>
                    <div class="card__text">
                      <div class="card__title">@list.uName</div>
                      <div class="card__description">
                        @list.uFunction
                        <div class="item-address"><div class="icon">@list.uAddress</div></div>
                        <div class="item-phone"><div class="icon">@list.uPhone</div></div>
                        <div class="item-email"><div class="icon">@list.uEmail</div></div>
                      </div>
                    </div>

                  </div>
              }
          </div>
        }
      </div>
    }
      
</article>


@helper RenderParagraphAnchor()
{
  if(Convert.ToBoolean(Dynamicweb.Configuration.SystemConfiguration.Instance.GetValue("/Globalsettings/Settings/Performance/DeactivateParagraphAnchor")))
  {
    <a id='@GetString("ParagraphID")' class="pidlink"></a>
  }
}
@helper RenderHeading()
{
  if(GetBoolean("Item.ShowTitle") && GetString("Item.TitleOrder") == "title-first")
  {
	  @RenderHeadingHtml()
  }
}
@helper RenderHeadingHtml()
{
  if (!string.IsNullOrEmpty(GetString("Item.Title")))
  {
    string headingType = string.IsNullOrEmpty(GetString("Item.HeadingType")) ? "h1" : GetString("Item.HeadingType");
    <header class="paragraphHeader">
	  @string.Format("<{0}>{1}</{0}>", headingType, GetString("Item.Title"))
	</header>
  }
}
@helper RenderText()
{
  if(GetString("Item.Order") == "image-left" || GetString("Item.Order") == "image-right")
  {
	@CheckForParagraphWrapper()
    @RenderImageTag()
  }
  if (GetBoolean("Item.ShowTitle") && GetString("Item.TitleOrder") == "title-with-text")
  {
	@CheckForParagraphWrapper()
    @RenderHeadingHtml()
  }
  if (!string.IsNullOrWhiteSpace(GetString("Item.Text")))
  {
	@CheckForParagraphWrapper()
    <div class="paragraphText">
      @GetString("Item.Text")
    </div>
  }
}
@helper RenderModule()
{
  if(!string.IsNullOrEmpty(GetString("ParagraphModule"))){
    @CheckForParagraphWrapper()
    @GetString("ParagraphModule")
  }
}
@helper RenderImage()
{
  string itemOrder = (GetString("Item.Order") == "") ? "image-top" : GetString("Item.Order");
  if(itemOrder == "image-left-column" || itemOrder == "image-right-column" || itemOrder == "image-top")
  {
    @RenderImageTag()
  }
}
@helper RenderImageTag()
{
  if (!string.IsNullOrEmpty(GetString("Item.Image")))
  {
    if (string.IsNullOrEmpty(GetString("Item.Link")))
    {
      @RenderImageWrapper()
    }
    else
    {
      string target = GetBoolean("Item.OpenInANewWindow") ? "target='_blank'" : "";
      <a href="@GetString("Item.Link")" @target>
        @RenderImageWrapper()
      </a>
    }
  }
}
@helper RenderImageWrapper()
{
  string image = System.Web.HttpContext.Current.Server.UrlEncode(GetString("Item.Image"));
  string imageAlt = (!string.IsNullOrEmpty(GetString("Item.ImageTitle"))) ? GetString("Item.ImageTitle") : GetString("Item.Title");
  string figureWidth = "col-xs-" + GetString("Item.ImageWidth");
  string optimizedWidth = "1280";
  string figureClass = "";//GetString("Item.ImageStyle") ;

  switch (GetString("Item.Order")){
    case "image-left":
	case "image-left-column":
      figureWidth += " pull-left noPaddingLeft";
      break;
    case "image-right":
    case "image-right-column":
      figureWidth += " pull-right noPaddingRight";
      break;
    case "image-top":
	default:
      figureWidth += " image-top noPadding";
      if(GetInteger("Item.ImageWidth") < 12){
        figureWidth += " col-xs-offset-" + ((12 - GetInteger("Item.ImageWidth")) / 2);
      }
      break;
  }
  figureClass = (figureClass == "none") ? figureWidth : figureClass + " " + figureWidth;

  if (Dynamicweb.Frontend.PageView.Current().Device.ToString() == Dynamicweb.Frontend.Devices.DeviceType.Mobile.ToString())
  {
    switch (GetString("Item.WidthMobile")){
      case "12":
        optimizedWidth = "480";
        break;
      case "6":
        optimizedWidth = "240";
        break;
    }
  }
  else {
    switch (GetString("Item.Width")){
      case "3":
	  case "4":
	  case "6":
        optimizedWidth = "722";
        break;
      case "8":
	  case "9":
        optimizedWidth = "960";
        break;
      default:
        optimizedWidth = "1280";
        break;
    }
  }
  <figure class="@figureClass">
    <img class="img-responsive" src="/Admin/Public/GetImage.ashx?width=@optimizedWidth&image=@image" title="@imageAlt" alt="@imageAlt" />
  </figure>
}

@Include("../includes/PageTemplates/ItemDetailHelpersRenderButton.cshtml")