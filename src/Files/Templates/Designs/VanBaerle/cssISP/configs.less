
@columnWidth: 60px;
@gutter: 30px;
@spacing: @gutter/2;

//Color palette
@primary: #ffffff;
@primary-light: #ffffff;

@secondary: #000000;
@secondary-light: #ccc;

@thirdtier: #999;
@thirdtier-light: #f1f1f1;

@red: #AD182C;
@red-light: #AE2F37;


// Forms
@formBorder: @thirdtier;
// Links
@linksColor: @secondary;
// header navigation
@headerNavigationBg: @thirdtier-light;
// footer
@footerMenuBg: @thirdtier-light;
@footerCreditsBg: @primary;
@footerBorder: @thirdtier;
// Buttons
@btn-default: @thirdtier;
@btn-default-color: @primary;
@btn-warning: #ec971f;
@btn-warning-color: @primary;
@btn-black: @secondary;
@btn-black-color: @primary;
@btn-bg: @thirdtier;
@btn-bg-color: @primary;
@btn-outline: @primary;
@btn-outline-color: @secondary;


//Z-index
@zIndex1: 1000;
@zIndex2: 2000;
@zIndex3: 3000;
@zIndex4: 4000;
@zIndex5: 5000;
@zIndex6: 6000;
@zIndex7: 7000;
@zIndex8: 8000;
@zIndex9: 9000;


//== Media queries breakpoints
//
//## Define the breakpoints at which your layout will change, adapting to different screen sizes.

// Extra small screen / phone
//** Deprecated `@screen-xs` as of v3.0.1
@screen-xs:                  480px;
//** Deprecated `@screen-xs-min` as of v3.2.0
@screen-xs-min:              @screen-xs;
//** Deprecated `@screen-phone` as of v3.0.1
@screen-phone:               @screen-xs-min;

// Small screen / tablet
//** Deprecated `@screen-sm` as of v3.0.1
@screen-sm:                  768px;
@screen-sm-min:              @screen-sm;
//** Deprecated `@screen-tablet` as of v3.0.1
@screen-tablet:              @screen-sm-min;

// Medium screen / desktop
//** Deprecated `@screen-md` as of v3.0.1
@screen-md:                  992px;
@screen-md-min:              @screen-md;
//** Deprecated `@screen-desktop` as of v3.0.1
@screen-desktop:             @screen-md-min;

// Large screen / wide desktop
//** Deprecated `@screen-lg` as of v3.0.1
@screen-lg:                  1200px;
@screen-lg-min:              @screen-lg;
//** Deprecated `@screen-lg-desktop` as of v3.0.1
@screen-lg-desktop:          @screen-lg-min;

// So media queries don't overlap when required, provide a maximum
@screen-xs-max:              (@screen-sm-min - 1);
@screen-sm-max:              (@screen-md-min - 1);
@screen-md-max:              (@screen-lg-min - 1);


// Mixins

// Typography

.fontFace(@fontName, @fontFolder, @fontFile, @fontAlias) when (@fontAlias = true) {
  @font-face {
    font-family: %("%s",@fontName);
        src: e(%("url(/Files/Templates/Designs/RizzoDesignFolder/css/00_fonts/%s/%s.eot)",@fontFolder,@fontFile));
        src: e(%("url(/Files/Templates/Designs/RizzoDesignFolder/css/00_fonts/%s/%s.eot?#iefix)",@fontFolder,@fontFile)) format("embedded-opentype"),
             e(%("url(/Files/Templates/Designs/RizzoDesignFolder/css/00_fonts/%s/%s.ttf)",@fontFolder,@fontFile)) format("truetype"),
             e(%("url(/Files/Templates/Designs/RizzoDesignFolder/css/00_fonts/%s/%s.svg#%s)",@fontFolder,@fontFile,@fontName)) format("svg");
    font-weight: normal;
    font-style: normal;
  }
  @media screen and ( -webkit-min-device-pixel-ratio:0 ) {
      @font-face {
          font-family: %("%s",@fontName);
          src: e(%("url(fonts/%s/%s.svg)",@fontFolder,@fontFile)) format("svg");
      }
  }
}

.fontFace(@fontName, @fontFolder, @fontFile, @fontAlias) when (@fontAlias = false) {
  @font-face {
    font-family: %("%s",@fontName);
        src: e(%("url(/Files/Templates/Designs/RizzoDesignFolder/css/00_fonts/%s/%s.eot)",@fontFolder,@fontFile));
        src: e(%("url(/Files/Templates/Designs/RizzoDesignFolder/css/00_fonts/%s/%s.eot?#iefix)",@fontFolder,@fontFile)) format("embedded-opentype"),
             e(%("url(/Files/Templates/Designs/RizzoDesignFolder/css/00_fonts/%s/%s.ttf)",@fontFolder,@fontFile)) format("truetype"),
             e(%("url(/Files/Templates/Designs/RizzoDesignFolder/css/00_fonts/%s/%s.svg#%s)",@fontFolder,@fontFile,@fontName)) format("svg");
    font-weight: normal;
    font-style: normal;
  }
}

.font-size (@fontSize:12) {
  font-size: @fontSize+0px;
  font-size: @fontSize/10+0rem;
}

.gradient(@fromColor, @toColor) {
  background-color : @fromColor;
  background : -webkit-gradient(linear, 0 0, 0 bottom, from(@fromColor), to(@toColor));
  background : -webkit-linear-gradient(@fromColor, @toColor);
  background : -moz-linear-gradient(@fromColor, @toColor);
  background : -ms-linear-gradient(@fromColor, @toColor);
  background : -o-linear-gradient(@fromColor, @toColor);
  background : linear-gradient(@fromColor, @toColor);
}

.gradientImage(@image, @fromColor, @toColor) {
  background-color : @fromColor;
  background : url(@image), -webkit-gradient(linear, 0 0, 0 bottom, from(@fromColor), to(@toColor));
  background : url(@image), -webkit-linear-gradient(@fromColor, @toColor);
  background : url(@image), -moz-linear-gradient(@fromColor, @toColor);
  background : url(@image), -ms-linear-gradient(@fromColor, @toColor);
  background : url(@image), -o-linear-gradient(@fromColor, @toColor);
  background : url(@image), linear-gradient(@fromColor, @toColor);
}

.gradientFlex(@fromColor, @toColor) {
  background-color : @fromColor;
  background : -webkit-linear-gradient(top, @fromColor, @fromColor 50%, @toColor 50%,@toColor);
  background : -moz-linear-gradient(top, @fromColor, @fromColor 50%, @toColor 50%,@toColor);
  background : -ms-linear-gradient(top, @fromColor, @fromColor 50%, @toColor 50%,@toColor);
  background : -o-linear-gradient(top, @fromColor, @fromColor 50%, @toColor 50%,@toColor);
  background : linear-gradient(top, @fromColor, @fromColor 50%, @toColor 50%,@toColor);
}

.gradientFlexImage(@image, @fromColor, @toColor) {
  background-color : @fromColor;
  background : url(@image), -webkit-linear-gradient(top,@fromColor,@fromColor 50%, @toColor 50%,@toColor);
  background : url(@image), -moz-linear-gradient(top,@fromColor,@fromColor 50%, @toColor 50%,@toColor);
  background : url(@image), -ms-linear-gradient(top,@fromColor,@fromColor 50%, @toColor 50%, @toColor);
  background : url(@image), -o-linear-gradient(top,@fromColor,@fromColor 50%, @toColor 50%,@toColor);
  background : url(@image), linear-gradient(top,@fromColor,@fromColor 50%, @toColor 50%,@toColor);
}

.gradientOneStop(@direction: top, @fromColor, @stopColor, @toColor) {
  background-color : @fromColor;
  background : -webkit-gradient(linear, 0 0, 0 @direction, from(@fromColor), to(@toColor));
  background : -webkit-linear-gradient(@direction, @fromColor, @stopColor, @toColor);
  background : -moz-linear-gradient(@direction, @fromColor, @stopColor, @toColor);
  background : -ms-linear-gradient(@direction, @fromColor, @stopColor, @toColor);
  background : -o-linear-gradient(@direction, @fromColor, @stopColor, @toColor);
  background : linear-gradient(@direction, @fromColor, @stopColor, @toColor);
}

.colorize_bg(@color: @primary, @alpha: 1) {
  background:@color;
  background: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
}

.rounded-corners (@radius: 3px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  -ms-border-radius: @radius;
  -o-border-radius: @radius;
  border-radius: @radius;
}

.rounded-corners-param (@tl, @tr, @br, @bl) {
  -webkit-border-radius: @tl @tr @br @bl;
  -moz-border-radius: @tl @tr @br @bl;
  -ms-border-radius: @tl @tr @br @bl;
  -o-border-radius: @tl @tr @br @bl;
  border-radius: @tl @tr @br @bl;
}

.shadow(@color, @hShadow, @vShadow, @blur, @spread) {
  -webkit-box-shadow : @color @hShadow @vShadow @blur @spread;
  -moz-box-shadow    : @color @hShadow @vShadow @blur @spread;
}

.textShadow(@color, @hShadow, @vShadow, @blur) {
  text-shadow: @color @hShadow @vShadow @blur;
}

.opacity(@opacity, @opacityIe) {
  opacity:@opacity;
  filter:alpha(opacity=@opacityIe);
}

.rotate(@degrees: -90) {
  -webkit-transform : rotate(@degrees * 1deg);
  -moz-transform    : rotate(@degrees * 1deg);
  -o-transform      : rotate(@degrees * 1deg);
   filter            : progid:DXImageTransform.Microsoft.Matrix(M11 = 0.00000000, M12 = 1.00000000, M21 = -1.00000000, M22 = 0.00000000, sizingMethod = 'auto expand');
  -ms-filter        : "progid:DXImageTransform.Microsoft.Matrix(M11 = 0.00000000 ,M12 = 1.00000000, M21 = -1.00000000 ,M22 = 0.00000000,SizingMethod = 'auto expand')";
  transform         : rotate(@degrees * 1deg); /* Newer browsers (incl IE9) */
}

.transition(@properties ,@seconds, @transition) {
  -webkit-transition: @properties @seconds @transition;
    -moz-transition: @properties @seconds @transition;
    -o-transition: @properties @seconds @transition;
    -ms-transition: @properties @seconds @transition;
    transition: @properties @seconds @transition;
}

.box-sizing(@value) {
  -o-box-sizing: @value;
  -moz-box-sizing: @value;
  -webkit-box-sizing: @value;
  box-sizing: @value;
}

.vertical-align(@position: relative) {
  position: @position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}